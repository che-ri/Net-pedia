{"version":3,"sources":["modules/GlobalStyle.js","components/Header.js","components/Layout.js","pages/Movies.js","pages/Detail.js","pages/Test.js","components/AppRouter.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","StyledHeader","Styled","header","withRouter","className","to","type","placeholder","Layout","children","useState","isLoading","setIsloading","Loading","a","useEffect","StyledLayout","div","PopularData","id","title","overview","vote_average","vote_count","poster_path","backdrop_path","genres","alt","src","join","pathname","state","MoviesData","Movies","data","setData","popular","setPopular","GetMovie","axios","get","results","newMovieData","map","genreIds","genre_ids","movieItem","matchGenres","filter","genre","includes","shift","slice","console","log","StyledPopularMovie","main","StyledMovieList","popularMovie","name","movie","StyledDetail","Detail","props","undefined","history","push","location","aria-hidden","focusable","data-prefix","data-icon","class","role","xmlns","viewBox","fill","d","Test","AppRouter","exact","path","component","from","App","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.887ca176.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap');\n/* font 설정 */\ninput {\n font-family: 'Noto Sans KR', sans-serif !important;\n}\n*{\n  margin:0;\n  padding:0;\n  box-sizing:border-box;\n  font-family: 'Noto Sans KR', sans-serif !important;\n  &:focus,&:hover,&:active{\n  outline:none !important;\n  }\n  outline:none !important;\n}\nul {\n  list-style: none;\n}\na {\n  text-decoration: none;\n  color:white;\n}\nbutton, input {\n  border: 0;\n}\nbody{\n  background:#141414;\n  color:#fff;\n  /* 스크롤바 제거 */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  .container {\n    /* max-width: 1140px; */\n    margin: 0 auto;\n    position: relative;\n    /* @media (max-width: 1200px) {\n        width: calc(100% - 50px);\n    } */\n  }\n}\n`;\n","import React from 'react';\nimport Styled from 'styled-components';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst StyledHeader = Styled.header`\n    height:40px;\n    width:100%;\n    background:#141414;\n    font-size:15px;\n    display:flex;\n    justify-content:space-between;\n    height:100%;\n    padding:10px;\n    .header__column--left{\n        display:flex;\n        align-items:center;\n        height:100%;\n        .logo{\n            font-size:0;\n            margin-right:15px;\n            p{\n                font-size: 1.5rem;\n                font-weight:600;\n                color:#e50914;\n                span{\n                    color:white;\n                }\n            }\n        }\n        .controls{\n            height:100%;\n            a{\n                color:white;\n                font-size:1rem;\n                margin:5px;\n            }\n        }\n    }\n    .header__column--right{\n        height:25px;\n        margin-top:auto;\n        position:relative;\n        font-size:15px;\n        input{\n            background:#141414;\n            font-size:1rem;\n            color:white;\n            &::placeholder{\n            padding: 7px;\n            }\n            &:focus{\n                border-bottom:1px solid white;\n            }\n            \n        }\n    }\n`;\n\nconst Header = () => {\n    return (\n        <StyledHeader>\n            <div className=\"header__column--left\">\n                <Link to=\"/\" className=\"logo\">\n                    <p>\n                        NET<span>PEDIA</span>\n                    </p>\n                </Link>\n                <div className=\"controls\">\n                    <Link to=\"/\">영화</Link>\n                    <Link to=\"/test\">TV 프로그램</Link>\n                    <Link to=\"/test\">책</Link>\n                </div>\n            </div>\n            <div className=\"header__column--right\">\n                <input type=\"text\" placeholder=\"검색\" />\n            </div>\n        </StyledHeader>\n    );\n};\n\nexport default withRouter(Header);\n","import React, { useState, useEffect } from 'react';\nimport Styled from 'styled-components';\nimport Header from './Header';\nconst Layout = ({ children }) => {\n    const [isLoading, setIsloading] = useState(true);\n    const Loading = async () => {\n        setIsloading(false);\n    };\n    useEffect(() => {\n        Loading();\n    }, []);\n\n    const StyledLayout = Styled.div`\n    width: 1000px;\n    margin : auto;\n    `;\n    return (\n        <StyledLayout>\n            {isLoading ? (\n                <div className=\"loader\">\n                    <span className=\"loader__text\">Loading...</span>\n                </div>\n            ) : (\n                <div className=\"App\">\n                    <Header />\n                    {children}\n                </div>\n            )}\n        </StyledLayout>\n    );\n};\nexport default Layout;\n","import React, { useState, useEffect } from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Layout from '../components/Layout';\nimport { Link } from 'react-router-dom';\n\nconst Movies = () => {\n    const [data, setData] = useState([]);\n    const [popular, setPopular] = useState([]);\n    const GetMovie = async () => {\n        //themoviedb에서 인기있는 영화목록을 가져왔다.\n        const {\n            data: { results },\n        } = await axios.get('https://api.themoviedb.org/3/movie/popular?api_key=d7d1e7b43a6581ecf72c793c35505402');\n\n        const {\n            data: { genres },\n        } = await axios.get('https://api.themoviedb.org/3/genre/movie/list?api_key=d7d1e7b43a6581ecf72c793c35505402&language=en-US');\n\n        const newMovieData = results.map(({ genre_ids: genreIds, ...movieItem }) => {\n            const matchGenres = genres.filter(genre => genreIds.includes(genre.id));\n            let newMovie = { ...movieItem, genres: matchGenres };\n            return newMovie;\n        });\n\n        //state에 영화목록을 저장한다.\n        setPopular([newMovieData.shift()]);\n        setData(newMovieData.slice(0, 18));\n        console.log(newMovieData);\n        //영화 포스터의 값을 얻고자 했다.\n        //https://image.tmdb.org/t/p/w500//{소스값} 을 적으면, 이미지가 나타난다.\n        //자세한 것은 https://stockant.tistory.com/564 블로그 참조.\n    };\n\n    //마운트가 끝나자마자 API를 가져올 것이다.\n    useEffect(() => {\n        GetMovie();\n    }, []);\n\n    const StyledPopularMovie = Styled.main`\n        position:relative;\n        background-color:rgba(0,0,0,0.6);\n        .popular__splash{\n          position:absolute;\n          z-index:-1;\n          width:100%;\n          height:500px;\n        }\n        .popular__inner{\n        display:flex;\n        justify-content:space-between;\n        height:500px;\n        padding:7% 15%;\n        /* margin:30px; */\n        font-size:15px;\n        .popular__img{\n            img{\n                height:100%;\n                width:250px;\n                object-fit:fill;\n            }\n        }\n        .popular__summary{\n            position:relative;\n            display:flex;\n            flex-direction:column;\n            justify-content:space-between;\n            margin-left: 7%;\n            .popular__label{\n                font-size:1em;\n                display:flex;\n                justify-content:flex-end;\n                line-height:1;\n                div{\n                    background-color:#e50914;\n                    padding:7px 17px;\n                    border-radius : 3px;\n                    span{\n                    }\n                }\n            }\n            h4{\n                margin-bottom:20px;\n                font-size:2rem;\n            }\n            p{\n                font-size:1rem;\n            }\n            .popular__controls{\n                display:flex;\n                justify-content:space-between;\n                a{\n                    margin-top:auto;\n                    color:#fff;\n                    border-bottom: 1px solid #fff\n                }\n            }\n            \n        } \n      }\n        \n`;\n\n    const StyledMovieList = Styled.div`\n  padding:20px;\n  section{\n    width:100%;\n    .movies__list{\n      display:grid;\n      grid-template-columns:repeat(3,1fr);\n      grid-auto-rows:1fr;\n      gap:20px;\n      div{\n        display:flex;\n        flex-direction:column;\n      }\n    }\n    \n  }\n  `;\n\n    return (\n        <Layout>\n            <StyledPopularMovie>\n                {popular?.map(popularMovie => (\n                    <PopularData\n                        //data안에 사용할 정보들을 prop으로 선언해주었다.\n                        key={popularMovie.id}\n                        id={popularMovie.id}\n                        title={popularMovie.title}\n                        overview={popularMovie.overview}\n                        vote_average={popularMovie.vote_average}\n                        vote_count={popularMovie.vote_count}\n                        poster_path={`https://image.tmdb.org/t/p/w300/${popularMovie.poster_path}`}\n                        backdrop_path={popularMovie.backdrop_path}\n                        genres={popularMovie.genres.map(genre => genre.name)}\n                    />\n                ))}\n            </StyledPopularMovie>\n            <StyledMovieList>\n                <section className=\"movies__container\">\n                    <div className=\"movies__list\">\n                        {data.map(movie => (\n                            <MoviesData\n                                //data안에 사용할 정보들을 prop으로 선언해주었다.\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.title}\n                                overview={movie.overview}\n                                vote_average={movie.vote_average}\n                                vote_count={movie.vote_count}\n                                backdrop_path={movie.backdrop_path}\n                                poster_path={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                                genres={movie.genres.map(genre => genre.name)}\n                            />\n                        ))}\n                    </div>\n                </section>\n            </StyledMovieList>\n        </Layout>\n    );\n};\n\nfunction PopularData({ id, title, overview, vote_average, vote_count, poster_path, backdrop_path, genres }) {\n    return (\n        <>\n            <img className=\"popular__splash\" alt={title} src={`https://image.tmdb.org/t/p/original/${backdrop_path}`} />\n            <div className=\"popular__inner\">\n                <div className=\"popular__img\">\n                    <img src={poster_path} alt={title} title={title} />\n                </div>\n                <div className=\"popular__summary\">\n                    <div className=\"popular__label\">\n                        <div>\n                            <span>POPULAR</span>\n                        </div>\n                    </div>\n                    <div className=\"popular__info\">\n                        <h4>{title}</h4>\n                        <p>{overview}</p>\n                    </div>\n                    <div className=\"popular__controls\">\n                        <span>\n                            평점 ★{vote_average}\n                            <span> ({vote_count}명)</span>\n                            <p>장르 : {genres.join(' ')}</p>\n                        </span>\n                        <Link\n                            to={{\n                                pathname: `/detail/${id}`,\n                                state: {\n                                    title,\n                                    overview,\n                                    vote_average,\n                                    vote_count,\n                                    poster_path,\n                                    backdrop_path,\n                                    genres,\n                                },\n                            }}\n                            className=\"movies__movie\"\n                        >\n                            더보기\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nfunction MoviesData({ id, title, overview, vote_average, vote_count, poster_path, backdrop_path, genres }) {\n    //data를 잘 가져왔다면, data 안에 title을 렌더링 할 것이다.\n    return (\n        <Link\n            to={{\n                pathname: `/detail/${id}`,\n                state: {\n                    title,\n                    overview,\n                    vote_average,\n                    vote_count,\n                    poster_path,\n                    backdrop_path,\n                    genres,\n                },\n            }}\n            className=\"movies__movie\"\n        >\n            <img src={poster_path} alt={title} title={title} />\n            <p>평점 ★{vote_average}</p>\n            <h3 className=\"movie__title\">{title}</h3>\n        </Link>\n    );\n}\n\n//data가 타입에 맞게 잘 가져왔는지 확인하는 작업이다.\nPopularData.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    vote_count: PropTypes.number.isRequired,\n};\n\n//data가 타입에 맞게 잘 가져왔는지 확인하는 작업이다.\nMoviesData.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    vote_count: PropTypes.number.isRequired,\n};\n\nexport default Movies;\n","import React, { useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Layout from '../components/Layout';\n\nconst StyledDetail = Styled.div`\nposition:relative;\n        background-color:rgba(0,0,0,0.6);\n        .detail__splash{\n            position:absolute;\n            z-index:-1;\n            width:100%;\n            height:500px;\n        }\n        .detail__inner{\n            display:flex;\n            justify-content:space-between;\n            height:500px;\n            padding:7% 15%;\n            font-size:15px;\n        .detail__img{\n            img{\n                height:100%;\n                width:250px;\n                object-fit:fill;\n            }\n        }\n        .detail__summary{\n            margin-top:38px;\n            position:relative;\n            display:flex;\n            flex-direction:column;\n            justify-content:space-between;\n            margin-left: 7%;\n            h4{\n                margin-bottom:20px;\n                font-size:2rem;\n            }\n            p{\n                font-size:1rem;\n            }\n        }\n        .detail__controls{\n                display:flex;\n                justify-content:space-between;\n                a{\n                    width:20px;\n                    margin-top:auto;\n                    color:#fff;\n                }\n            } \n      }\n`;\n\nconst Detail = props => {\n    useEffect(() => {\n        if (props === undefined) {\n            props.history.push('/');\n        }\n    }, []);\n    const movie = props.location.state;\n    return (\n        <Layout>\n            <StyledDetail>\n                <img className=\"detail__splash\" alt={movie.title} src={`https://image.tmdb.org/t/p/original/${movie.backdrop_path}`} />\n                <div className=\"detail__inner\">\n                    <div className=\"detail__img\">\n                        <img src={movie.poster_path} alt={movie.title} title={movie.title} />\n                    </div>\n                    <div className=\"detail__summary\">\n                        <div className=\"detail__info\">\n                            <h4>{movie.title}</h4>\n                            <p>{movie.overview}</p>\n                        </div>\n\n                        <div className=\"detail__controls\">\n                            <div>\n                                평점 ★{movie.vote_average}\n                                <span> ({movie.vote_count}명)</span>\n                                <p>장르 : {movie.genres.join(' ')}</p>\n                            </div>\n                            <Link to=\"/\">\n                                <svg\n                                    aria-hidden=\"true\"\n                                    focusable=\"false\"\n                                    data-prefix=\"fas\"\n                                    data-icon=\"arrow-left\"\n                                    class=\"svg-inline--fa fa-arrow-left fa-w-14\"\n                                    role=\"img\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 448 512\"\n                                >\n                                    <path\n                                        fill=\"currentColor\"\n                                        d=\"M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z\"\n                                    ></path>\n                                </svg>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </StyledDetail>\n        </Layout>\n    );\n};\n\nexport default Detail;\n","import React from 'react';\nimport Layout from '../components/Layout';\n\nconst Test = () => {\n    return (\n        <Layout>\n            <span>TEST 중!</span>\n        </Layout>\n    );\n};\n\nexport default Test;\n","import { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Movies from '../pages/Movies';\nimport Detail from '../pages/Detail';\nimport Test from '../pages/Test';\n\nconst AppRouter = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Movies} />\n                <Route exact path=\"/detail/:id\" component={Detail} />\n                <Route exact path=\"/test\" component={Test} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport { GlobalStyle } from './modules/GlobalStyle';\nimport AppRouter from './components/AppRouter';\n\nconst App = () => {\n    return (\n        <React.StrictMode>\n            <GlobalStyle />\n            <AppRouter />\n        </React.StrictMode>\n    );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}